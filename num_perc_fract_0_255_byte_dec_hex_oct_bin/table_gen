#!/usr/bin/env sh
set -eu
export LC_ALL=C

# Floating point number functions.

# Default scale used by float functions.
float_scale="4"

# Evaluate a floating point number expression.
float_eval() {
  stat="0" result="0.0"

  [ "$1" ] && {
    result="$(echo "scale=${float_scale}; ${*}" | bc -q 2> "/dev/null")"
    stat="$?"
    [ "$stat" = "0" ] && [ -z "$result" ] && stat="1"
  }

  echo "$result"; return "$stat"
}

# Evaluate a floating point number conditional expression.
float_cond() {
  cond="0"

  [ "$1" ] && {
    cond="$(echo "$*" | bc -q 2> "/dev/null")"
    [ "$cond" ] || cond="0"
    [ "$cond" != "0" ] && [ "$cond" != "1" ] && cond="0"
  }

  return "$((cond == "0"))"
}

third="3.33333333333"

echo "# Percentage step increments of the decimal number 255"

echo "
TODO: add floor, ceil approx. columns"

for p in 5 "$third" 1; do
  echo
  echo "## ${p}%"
  echo

  {
    echo "% Decimal Hexadecimal Binary Octal"
    echo "-: -: -: -: -:
"
    for x in $(y=0; while float_cond "${y}<=100"; do printf "%s " "${y}"; y="$(float_eval "${y}+${p}")"; done); do
       printf "\`%s\` " "$x"
       for b in 10 16 2 8; do
         printf "\`%s\` " "$(float_eval "obase = ${b}; (255 * (${x} * 0.01)) / 1")"
       done
       echo
    done 
  } | column -t -R - -o " | " | sed -e 's/^/| /g' -e 's/$/ |/g'
done
